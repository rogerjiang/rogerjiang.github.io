---
layout: post
title: leetcode-3-Longest Substring Without Repeating Characters
category: leetcode
tags: [Algorithms]
---

# Longest Substring Without Repeating Characters

## 一，想法

今天天气还行，每篇前写一些废话，实在是不错的一件事情。。。。

## 二，description

Given a string, find the length of the longest substring without repeating characters. 
For example, the longest substring without repeating letters for "abcabcbb" is "abc", 
which the length is 3. For "bbbbb" the longest substring is "b", with the length of 1.

## 三，resolvent

这个问题的想法比较简单，应该还可以优化，简单写了一下，谁知道就过咯。不过大概想了一下，目前的时间复杂度基本
不会大于O（52*n）所以还好。基本想法是顺序遍历，如果当前的字母，前面有出现过的话，就把相同字母前面的去除。
如果没有的话，最长的字符串就加1.

## 四，code
<pre>
<code>
class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int maxLength = 0;
        int st = 0;
        int sign = 0;
        int length = 0;
        
        for(int i = 0; i < s.length(); ++i)
        {
            sign = 0;
            for(int j = st; j < i; ++j)
            {
                if(s[j] == s[i]) 
                {
                    sign = 1;
                    length = length - (j-st);
                    st = j+1;
                }
            }
            
            if(sign == 0) 
            {
                length++;
                if(length > maxLength) {
                    maxLength = length;
                }
            }
        }
        
        return maxLength;
    }
};
</code>
</pre>

